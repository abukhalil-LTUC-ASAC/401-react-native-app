{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/yahya95/projects/401-react-native-app/App.js\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport * as Permissions from 'expo-permissions';\nimport * as Contacts from 'expo-contacts';\n\nfunction App(props) {\n  var _this = this;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      contacts = _useState2[0],\n      setContacts = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      permissions = _useState4[0],\n      setPermissions = _useState4[1];\n\n  var getPermissions = function getPermissions() {\n    var _await$Permissions$as, status;\n\n    return _regeneratorRuntime.async(function getPermissions$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CONTACTS));\n\n          case 2:\n            _await$Permissions$as = _context.sent;\n            status = _await$Permissions$as.status;\n            setPermissions(true);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var showContacts = function showContacts() {\n    var contactList;\n    return _regeneratorRuntime.async(function showContacts$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(Contacts.getContactsAsync());\n\n          case 2:\n            contactList = _context2.sent;\n            setContacts(contactList.data);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    getPermissions();\n  }, []);\n\n  var call = function call(contact) {\n    var phoneNumber = contact.phoneNumbers[0].number.replace(/[\\(\\)\\-\\s+]/g, '');\n    console.log(contact.phoneNumbers);\n    var link = \"tel:\" + phoneNumber;\n    Linking.canOpenURL(link).then(function (supported) {\n      return Linking.openURL(link);\n    }).catch(console.error);\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    onPress: showContacts,\n    title: \"Show Contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(View, {\n    style: styles.section,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, \"Data asdsd...\"), React.createElement(FlatList, {\n    data: contacts,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref) {\n      var item = _ref.item;\n      return React.createElement(Button, {\n        style: styles.person,\n        title: item.name,\n        onPress: function onPress() {\n          return call(item);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 33\n        }\n      });\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })));\n}\n\nvar styles = StyleSheet.create({\n  person: {\n    marginTop: '1em'\n  },\n  section: {\n    margin: 10,\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start'\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 25\n  }\n});\nexport default App;","map":{"version":3,"sources":["/home/yahya95/projects/401-react-native-app/App.js"],"names":["React","useState","useEffect","Permissions","Contacts","App","props","contacts","setContacts","permissions","setPermissions","getPermissions","askAsync","CONTACTS","status","showContacts","getContactsAsync","contactList","data","call","contact","phoneNumber","phoneNumbers","number","replace","console","log","link","Linking","canOpenURL","then","supported","openURL","catch","error","styles","container","section","item","id","person","name","StyleSheet","create","marginTop","margin","flex","alignItems","justifyContent","backgroundColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;;;;;;;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,OAAO,KAAKC,QAAZ,MAA0B,eAA1B;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAAA,kBAEcL,QAAQ,CAAC,EAAD,CAFtB;AAAA;AAAA,MAEXM,QAFW;AAAA,MAEDC,WAFC;;AAAA,mBAGoBP,QAAQ,CAAC,KAAD,CAH5B;AAAA;AAAA,MAGXQ,WAHW;AAAA,MAGEC,cAHF;;AAKlB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACIR,WAAW,CAACS,QAAZ,CAAqBT,WAAW,CAACU,QAAjC,CADJ;;AAAA;AAAA;AACbC,YAAAA,MADa,yBACbA,MADa;AAErBJ,YAAAA,cAAc,CAAC,IAAD,CAAd;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAKA,MAAMK,YAAY,GAAG,SAAfA,YAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACOX,QAAQ,CAACY,gBAAT,EADP;;AAAA;AACbC,YAAAA,WADa;AAEnBT,YAAAA,WAAW,CAACS,WAAW,CAACC,IAAb,CAAX;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAMAhB,EAAAA,SAAS,CAAE,YAAM;AACfS,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAMQ,IAAI,GAAG,SAAPA,IAAO,CAAAC,OAAO,EAAI;AACtB,QAAIC,WAAW,GAAGD,OAAO,CAACE,YAAR,CAAqB,CAArB,EAAwBC,MAAxB,CAA+BC,OAA/B,CAAuC,cAAvC,EAAuD,EAAvD,CAAlB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,OAAO,CAACE,YAApB;AACA,QAAIK,IAAI,YAAUN,WAAlB;AACAO,IAAAA,OAAO,CAACC,UAAR,CAAmBF,IAAnB,EAAyBG,IAAzB,CAA8B,UAAAC,SAAS;AAAA,aAAGH,OAAO,CAACI,OAAR,CAAgBL,IAAhB,CAAH;AAAA,KAAvC,EAAiEM,KAAjE,CAAuER,OAAO,CAACS,KAA/E;AACD,GALD;;AAOA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAErB,YADX;AAEE,IAAA,KAAK,EAAC,eAFR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEoB,MAAM,CAACE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE9B,QADR;AAEE,IAAA,YAAY,EAAE,sBAAC+B,IAAD;AAAA,aAAQA,IAAI,CAACC,EAAb;AAAA,KAFhB;AAGE,IAAA,UAAU,EAAE;AAAA,UAAED,IAAF,QAAEA,IAAF;AAAA,aAAU,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAEH,MAAM,CAACK,MAAtB;AAA8B,QAAA,KAAK,EAAEF,IAAI,CAACG,IAA1C;AAAgD,QAAA,OAAO,EAAE;AAAA,iBAAKtB,IAAI,CAACmB,IAAD,CAAT;AAAA,SAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAV;AAAA,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CANF,CADF;AAkBD;;AAED,IAAMH,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BH,EAAAA,MAAM,EAAE;AACNI,IAAAA,SAAS,EAAC;AADJ,GADuB;AAI/BP,EAAAA,OAAO,EAAE;AACPQ,IAAAA,MAAM,EAAE,EADD;AAEPC,IAAAA,IAAI,EAAE,CAFC;AAGPC,IAAAA,UAAU,EAAE,YAHL;AAIPC,IAAAA,cAAc,EAAE;AAJT,GAJsB;AAU/BZ,EAAAA,SAAS,EAAE;AACTW,IAAAA,UAAU,EAAE,QADH;AAETE,IAAAA,eAAe,EAAE,MAFR;AAGTH,IAAAA,IAAI,EAAE,CAHG;AAITE,IAAAA,cAAc,EAAE,QAJP;AAKTJ,IAAAA,SAAS,EAAE;AALF;AAVoB,CAAlB,CAAf;AAmBA,eAAevC,GAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { StyleSheet, FlatList, Text, View, Button, Linking } from 'react-native';\nimport * as Permissions from 'expo-permissions';\nimport * as Contacts from 'expo-contacts';\n\nfunction App(props) {\n\n  const [contacts, setContacts] = useState([]);\n  const [permissions, setPermissions] = useState(false);\n\n  const getPermissions = async () => {\n    const { status } = await Permissions.askAsync(Permissions.CONTACTS);\n    setPermissions(true);\n  };\n\n  const showContacts = async () => {\n    const contactList = await Contacts.getContactsAsync();\n    setContacts(contactList.data);\n  };\n\n\n  useEffect( () => {\n    getPermissions();\n  }, []);\n\n  const call = contact => {\n    let phoneNumber = contact.phoneNumbers[0].number.replace(/[\\(\\)\\-\\s+]/g, '');\n    console.log(contact.phoneNumbers)\n    let link = `tel:${phoneNumber}`;\n    Linking.canOpenURL(link).then(supported=> Linking.openURL(link)).catch(console.error);\n  }\n\n  return (\n    <View style={styles.container}>\n      <Button\n        onPress={showContacts}\n        title=\"Show Contacts\"\n      />\n\n      <View style={styles.section}>\n        <Text>Data asdsd...</Text>\n        <FlatList\n          data={contacts}\n          keyExtractor={(item)=>item.id}\n          renderItem={({item})=><Button style={styles.person} title={item.name} onPress={()=> call(item) } />}\n        />\n      </View>\n    </View>\n  );\n\n}\n\nconst styles = StyleSheet.create({\n  person: {\n    marginTop:'1em',\n  },\n  section: {\n    margin: 10,\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n  },\n  container: {\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    flex: 1,\n    justifyContent: 'center',\n    marginTop: 25,\n  },\n});\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}